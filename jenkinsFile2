@Library('shared_libs') _

pipeline{

 agent {
  label ('Nodes')
 }
 
 tools {
  maven 'maven3.8.6'
}

triggers {
  pollSCM '* * * * *'
}

options {
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
  timestamps ()
}


stages {

// Getting code from git hub 
stage ('Checkout code') {

steps {
slackNotifications('STARTED')    
    
git branch: 'development', credentialsId: '114ddc02-b8e9-468f-a4b3-1af79b74ff25', url: 'https://github.com/San1DevOps/maven-web-application.git'
}

} //stage closing 

// Doing packages 

stage ('Build') {

steps {
sh "mvn clean package"
}
} //stage closing 

stage ('Executing sonarqube report') {
steps {
sh "mvn sonar:sonar"
}
} //stage closing 

stage ('Uploading to Artifacts Repo') {
steps {
sh "mvn deploy"
}
} //stage closing 

/*
stage ('Deploying the application to Tomcat') {

steps {
sshagent(['c096712d-914f-458f-a56a-4ccb8b13338e']) {

sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.36.75:/opt/apache-tomcat-9.0.68/webapps"

}
}  //steps closing 
} //stage closing 
*/

} //stages closing 

 post {
  aborted {
    slackNotifications(currentBuild.result)
  }
  success {
  slackNotifications(currentBuild.result)
  }
  failure {
   slackNotifications(currentBuild.result)
  }
}

} //pipeline closing 

//Code Snippet for sending slack notifications. 
/*
def slackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: "#amazon2")
  }
*/
