node {

try {

slackNotifications('STARTED')
def mavenHome = tool name: 'maven3.8.6'

echo "The Job name is : ${env.JOB_NAME} "
echo "The build no is : ${env.BUILD_NUMBER} "
echo "The node name is : ${env.NODE_NAME} "

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])


stage ('checkOutCode')
{git branch: 'development', credentialsId: '30681e73-6a41-4c63-8ac1-c3915d4b0636', url: 'https://github.com/San1DevOps/maven-web-application.git'
}

stage ('Build') {
sh " ${mavenHome}/bin/mvn clean package "
}

/*
stage ('ExecuteSonarQubeReport') {
sh " ${mavenHome}/bin/mvn clean sonar:sonar "
}

stage ('UploadingIntoArtifcat') {
sh " ${mavenHome}/bin/mvn clean deploy "
}

stage ('DeployingIntoTomcatserver') {
sshagent(['4d9aae0a-eda3-41f4-b8b8-8ff4cc872778']) {
sh " scp -o  StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.39.82:/opt/apache-tomcat-9.0.65/webapps "
}
}
*/
} //try closing

catch(e){
currentBuild.result="FAILURE"
throw e
}//catch closing 
finally{
 slackNotifications(currentBuild.result)
 }//finally closing

} //node closing


//Code Snippet for sending slack notifications. 

def slackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
  }
